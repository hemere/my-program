ll pd[];
ll rd[];
ll Ep(int x, int y){
  if(y == 0) return 1;
  if(y == 1) return x;
  ll r = Ep(x,y/2);
  if(y%2 == 1) return r *r%MOD *x%MOD;
  else return r *r%MOD;
}
ll Ftl(ll x){
  if(x == 1 || x == 0) return 1;
  if(pd[x] != 0) return pd[x];
  return pd[x] = Ftl(x-1) *x%MOD;
}
ll invFtl(ll x){
  if(x == 1 || x == 0) return 1;
  if(rd[x] != 0) return rd[x];
  return rd[x] = invFtl(x-1)*Ep(x,MOD-2)%MOD;
}
ll comb(ll m, ll n){
  if(m < n) return 0;
  return Ftl(m) *invFtl(n)%MOD *invFtl(m-n)%MOD;
}

--------------------------------------------------

ll comb(ll m, ll n){
  if(m < n) return 0;
  ll x = 1;
  for(int i=0; i<n; ++i){
    x *= m-i;
    x %= MOD;
    x *= Ep(n-i, MOD-2);
    x %= MOD;
  }
  return x;
}